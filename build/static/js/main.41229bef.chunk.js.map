{"version":3,"sources":["App.js","routes/about.jsx","routes/terms.jsx","routes/page.jsx","routes/stats.jsx","routes/notfound.jsx","routes/develop.jsx","routes/processing.jsx","index.js"],"names":["App","props","useState","playerName","setPlayername","serverName","setServername","email","setEmail","stats","setStats","navigate","useNavigate","className","to","type","name","value","onChange","e","target","files","onClick","formData","FormData","append","axios","post","then","response","data","src","width","height","href","rel","require","About","Terms","Page","id","useParams","slides","setSlides","error","setError","shareURL","useEffect","get","params","ID","res","console","log","stories","isPaused","TwitterShareButton","url","title","hashtags","TwitterIcon","size","round","FacebookShareButton","quote","hashtag","FacebookIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","VKShareButton","VKIcon","RedditShareButton","RedditIcon","Stats","NotFound","Develop","Processing","setQuote","shuffle","useCallback","index","Math","floor","random","quotes","length","intervalID","setInterval","clearInterval","lottie","loadAnimation","container","document","querySelector","animationData","loadingLogo","rootElement","getElementById","ReactDOM","render","path","element"],"mappings":"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","file":"static/js/main.41229bef.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react'; \r\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport './styles.css'\r\n\r\nexport function App(props) {\r\n\r\n    // Initialize states of variables\r\n    const [playerName, setPlayername] = useState('');\r\n    const [serverName, setServername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [stats, setStats] = useState('');\r\n\r\n    let navigate = useNavigate();\r\n\r\n    // Handle functions for the form\r\n    const handleplayerNameChange = (e) => {\r\n        setPlayername(e.target.value)\r\n    }\r\n\r\n    const handleserverNameChange = (e) => {\r\n        setServername(e.target.value)\r\n    }\r\n\r\n    const handleemailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const handlestatsChange = (e) => {\r\n        setStats(e.target.files[0])\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        \r\n        // Only execute this if form is complete\r\n        if ((playerName) && (serverName) && (stats) && (email)){  \r\n            const formData = new FormData();\r\n            formData.append(\r\n                \"stats\",\r\n                stats,\r\n                stats.name\r\n            );\r\n\r\n            formData.append(\r\n                \"playername\",\r\n                playerName,\r\n            );\r\n\r\n            formData.append(\r\n                \"servername\",\r\n                serverName,\r\n            );\r\n\r\n            formData.append(\r\n                \"email\",\r\n                email,\r\n            );\r\n                        \r\n            // Send data to server\r\n            axios.post('/api/upload', formData)\r\n            .then(function(response)\r\n            {\r\n                // When data is finally loaded, redirect to user page\r\n                if (response.data === \"Error 1\"){\r\n                    navigate('/develop/')\r\n                } else {\r\n                    navigate('/processing/');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n        <div className=\"App\">\r\n            <div className=\"left\">\r\n            <Link to=\"/\"><h1>MC Wrapped</h1></Link>\r\n            <div>\r\n                MC Wrapped generates a stories like presentation of \r\n                your world or server stats. Generate yours and compare\r\n                it with your friends!\r\n            </div>\r\n            <div>\r\n                <h2>Generate your own</h2>\r\n                <h3>Minecraft Name:</h3>\r\n                <input type=\"text\" name=\"playername\" value={playerName} onChange={handleplayerNameChange}></input>\r\n                <h3>Server or World Name:</h3>\r\n                <input type=\"text\" name=\"servername\" value={serverName} onChange={handleserverNameChange}></input>\r\n                <h3>Your Email:</h3>\r\n                <input type=\"email\" name=\"email\" value={email} onChange={handleemailChange}></input>\r\n                <h3>Select your stats file</h3>\r\n                <input type=\"file\" name=\"stats\" onChange={handlestatsChange}></input>\r\n                <button className=\"bn632-hover bn25\" onClick={handleSubmit}>\r\n                Upload! \r\n                </button>\r\n                <div>\r\n                <Link to=\"/stats\">Where can I find my stats file?</ Link><br /><br />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"stories\">\r\n                <img src=\"https://i.imgur.com/sDpIMQ9.png\" width=\"360\" height=\"640\" />\r\n            </div>\r\n        </div>\r\n            <div>\r\n            <a href=\"https://twitter.com/search?q=%23mcwrapped&src=typed_query&f=top\" target=\"_blank\" rel=\"noopener noreferrer\">Explore #mcwrapped on Twitter</a> |{\" \"}\r\n            <Link to=\"/about\">About</Link> |{\" \"}\r\n            <Link to=\"/terms\">Terms and conditions</Link>\r\n            </div>\r\n        <Outlet />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst stories = require('./example_slides.json');","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function About () {\r\n    return (\r\n        <div className=\"other\">\r\n            <h2>About MCWrapped</h2>\r\n            <div>MC Wrapped is a project by <a href=\"https://twitter.com/ruben_np91\" target=\"_blank\" rel=\"noopener noreferrer\">rubenlosud</a>.\r\n            MC Wrapped is not affiliated to Mojang® or Minecraft®. All videos shown in MC Wrapped were recorded by rubenlosud using Minecraft Java Edition®.\r\n            The music in the videos belongs to C418 and Lena Raine (Minecraft Studios Music)<br /><br />\r\n            <h3>Why do I need to input my email?</h3>\r\n            MCWrapped slides take a while to create and if you were to wait for them to be processed when there's a lot of people doing the same... You would\r\n            be waiting for a long time. MCWrapped uses your email to send you the generated slides and nothing else. Mail will not be sent to you again unless\r\n            you submit your data again. Your mail will not be shared with third parties or used for spam or advertisement (ours or otherwise.)\r\n            <h3>How does the website work?</h3>\r\n            The website takes your minecraft stats file and reads it for interesting data! It is designed for survival worlds so it won't probably work on\r\n            creative stats files or other types of gameplay. For survival, some specific things need to have happened inside the world, if it's a new world\r\n            it might not work either. If the website has not generated a MCWrapped for you and you think it's a mistake, please get in\r\n            contact with me.\r\n            <h3>Do you have any comments?</h3>\r\n            Let's get in touch:\r\n            <ul>\r\n                <li>\r\n                    Email me at webmaster@mcwrapped.online\r\n                </li>\r\n                <li>\r\n                    Message me <a href=\"https://twitter.com/ruben_np91\" target=\"_blank\" rel=\"noopener noreferrer\">on Twitter</a>\r\n                </li>\r\n            </ul>\r\n            MC Wrapped is possible thanks to the internet and its magic! Check out the things that made MC Wrapped possible:\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://www.npmjs.com/package/react-insta-stories\" target=\"_blank\" rel=\"noopener noreferrer\">react-insta-stories</a> by mohitk05\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.npmjs.com/package/react-share\" target=\"_blank\" rel=\"noopener noreferrer\">react-share</a> by nygardk\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://pypi.org/project/Pillow/\" target=\"_blank\" rel=\"noopener noreferrer\">Pillow</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://pypi.org/project/moviepy/\" target=\"_blank\" rel=\"noopener noreferrer\">Moviepy</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://github.com/RyanHecht/php-Minecraft-3D-Skin-Renderer\" target=\"_blank\" rel=\"noopener noreferrer\">3D Skin Renderer</a> by RyanHecht\r\n                </li>\r\n                <li>\r\n                    The animated cubes logo by <a href=\"https://isionindustries.myportfolio.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Ision Industries</a>\r\n                </li>\r\n                <li>\r\n                    The font shown in the stories by <a href=\"https://www.dafont.com/craftron-gaming.d6128\"target=\"_blank\" rel=\"noopener noreferrer\">Craftron Gaming</a>\r\n                </li>\r\n            </ul>\r\n            <h3>Contribute to the project</h3>\r\n            If you want to contribute to the project, share it with your friends!\r\n            </div><br /><br />\r\n            <Link to=\"/\">← Back</Link>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Terms () {\r\n    return (\r\n        <div className=\"other\">\r\n        <h2>Terms and Conditions</h2>\r\n        MC Wrapped and mcrwrapped.online do not use cookies and do not collect any of your data besides the one you willingly provide when you submit your stats.\r\n        Your data will not be sold to third parties. By using the service you agree to these terms and conditions.<br /><br />\r\n        <Link to=\"/\">← Back</Link>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, Navigate, useParams } from 'react-router-dom';\r\nimport Stories from 'react-insta-stories';\r\nimport { TwitterShareButton,\r\n         TwitterIcon,\r\n         FacebookShareButton,\r\n         FacebookIcon,\r\n         TelegramShareButton,\r\n         TelegramIcon,\r\n         WhatsappIcon,\r\n         WhatsappShareButton,\r\n         VKShareButton,\r\n         VKIcon,\r\n         RedditIcon,\r\n         RedditShareButton,\r\n         } from 'react-share';\r\n\r\nimport './styles.css'\r\nimport axios from 'axios';\r\n\r\nexport default function Page() {\r\n    const { id } = useParams();\r\n    const [slides, setSlides] = useState([]);\r\n    const [error, setError] = useState(0);\r\n\r\n    const shareURL = 'mcwrapped.online/page/' + id\r\n\r\n       useEffect(() =>{\r\n        axios\r\n        .get('/api/getid', {\r\n            params: {\r\n                ID:id\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res.data)\r\n            if (res.data === \"Error 1\"){\r\n                setError(1)\r\n            } else if (res.data === \"Error 2\"){\r\n                setError(2)\r\n            } else {\r\n                setError(0)\r\n                setSlides(res.data)\r\n            }\r\n        }); \r\n    }, [])\r\n\r\n    if (error === 0){\r\n        return(\r\n            <div>\r\n            <Link to=\"/\"><h1>MC Wrapped</h1></Link>\r\n            <div className=\"App\">\r\n                <div>\r\n                    <Stories\r\n                        stories={slides}\r\n                        isPaused={true}\r\n                    />\r\n                    <div>\r\n                        <h3 className=\"share\">Share with your friends:</h3>\r\n                        <TwitterShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            title={'Check my Minecraft Wrapped here:'}\r\n                            hashtags={['minecraft', 'mcwrapped']}\r\n                        >\r\n                            <TwitterIcon size={32} round={true} />\r\n                        </TwitterShareButton>\r\n                        <FacebookShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            quote={'Check my Minecraft Wrapped here:'}\r\n                            hashtag={'mcwrapped'}\r\n                        >\r\n                            <FacebookIcon size={32} round={true} />\r\n                        </FacebookShareButton>\r\n                        <TelegramShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            title={'Check my Minecraft Wrapped here:'}\r\n                        >\r\n                            <TelegramIcon size={32} round={true} />\r\n                        </TelegramShareButton>\r\n                        <WhatsappShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            title={'Check my Minecraft Wrapped here:'}\r\n                            separator=\" \"\r\n                        >\r\n                            <WhatsappIcon size={32} round={true} />\r\n                        </WhatsappShareButton>\r\n                        <VKShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            title={'Check my Minecraft Wrapped here:'}\r\n                        >\r\n                            <VKIcon size={32} round={true} />\r\n                        </VKShareButton>\r\n                        <RedditShareButton className=\"shareIcons\"\r\n                            url={shareURL}\r\n                            title={'Check my Minecraft Wrapped here:'}\r\n                        >\r\n                            <RedditIcon size={32} round={true} />\r\n                        </RedditShareButton>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/\"><h3>Generate yours!</h3></Link>\r\n            </div>\r\n        )\r\n    } else if (error === 2) {\r\n        return (\r\n            <div>\r\n            <h2>The username you're looking for cannot be found. Please try again.</h2>\r\n            <Link to=\"/\">Back to main page</Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Stats () {\r\n    return (\r\n        <div className=\"other\">\r\n            <h1>Where can I find my stats file?</h1>\r\n            The stats file is only provided if your version of Minecraft is <b>Java</b>. If you play on Bedrock, sorry!\r\n            If you play on Java edition, you can find your stats file by navigating to your stats folder inside your worlds folder inside your minecraft folder.<br />\r\n            The name of your stats file looks something like this:<br />\r\n            <b>61699b2e-d327-4a01-9f1e-0ea8c3f06bc6.json</b>\r\n\r\n            <h2>Windows Users</h2>\r\n            To access your minecraft folder open a 'Run' window by pressing the <i>Windows Key</i> and the <i>R</i> key and type <i>%APPDATA%/.minecraft/saves</i> then hit <i>Enter</i>. \r\n            Once you're there you will see all your saved worlds.\r\n            Open the one you want and inside you'll find a <i>stats</i> folder. Inside there, there will be a file with a lot of numbers and letters, ending with <i>.json</i>. <br />\r\n            That's the one!\r\n            <h2>MAC Users</h2>\r\n            To access your minecraft folder, press <i>Shift + Command + G</i> and Spotlight will open. Type <i>~/Library/Application Support/minecraft/saves</i> then hit Enter.\r\n            Once you're there you will see all your saved worlds.\r\n            Open the one you want and inside you'll find a <i>stats</i> folder. Inside there, there will be a file with a lot of numbers and letters, ending with <i>.json</i>. <br />\r\n            That's the one!\r\n            <h2>Linux Users</h2>\r\n            You will find your worlds folder in <i>~/.minecraft/saves</i>. \r\n            Open the one you want and inside you'll find a <i>stats</i> folder. Inside there, there will be a file with a lot of numbers and letters, ending with <i>.json</i>. <br />\r\n            That's the one!<br /><br />\r\n            <Link to=\"/\">← Back</Link>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function NotFound () {\r\n    return (\r\n        <div className=\"other\">\r\n            <h1>404</h1><br />\r\n            <img src=\"https://i.imgur.com/Fdc3avG.png\" /><br />\r\n            Whatever you were looking for is not here...<br /><br />\r\n            <Link to=\"/\">Back to main page</Link>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Develop () {\r\n    return (\r\n        <div className=\"other\">\r\n            <h2>It looks like your minecraft stats are not developed enough... Go back to the game and punch some trees!</h2>\r\n            <Link to=\"/\">Back to main page</Link>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport quotes from '../quotes.json';\r\nimport lottie from 'lottie-web';\r\nimport loadingLogo from '../loading.json'\r\n\r\nexport default function Processing () {\r\n\r\n    const [quote, setQuote] = useState('Processing...');\r\n\r\n    // Quotes\r\n    const shuffle = useCallback(() => {\r\n        const index = Math.floor(Math.random() * quotes.length);\r\n        setQuote(quotes[index].quote)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(shuffle, 3000);\r\n        return () => clearInterval(intervalID);\r\n    }, [shuffle])\r\n\r\n    useEffect(() =>{\r\n        lottie.loadAnimation({\r\n            container: document.querySelector(\"#loading\"),\r\n            animationData: loadingLogo\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"other\">\r\n            <h2>We're processing your stats... You will receive an email when we are done.</h2>\r\n            <div id=\"loading\" className=\"loading-style\" />\r\n            <h2>{quote}</h2><br />\r\n            <Link to=\"/\">Back to main page</Link><br /><br />\r\n            <a href=\"https://twitter.com/search?q=%23mcwrapped&src=typed_query&f=top\">Explore <b>#MCWrapped</b> on Twitter while you wait</a>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n    BrowserRouter,\n    Routes,\n    Route,\n } from 'react-router-dom';\n\nimport { App } from './App';\nimport About from './routes/about';\nimport Terms from './routes/terms';\nimport Page from './routes/page';\nimport Stats from './routes/stats';\nimport NotFound from './routes/notfound';\nimport Develop from './routes/develop';\nimport Processing from './routes/processing';\n\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <BrowserRouter>\n        <Routes>\n            <Route path='*' element={<NotFound />} />\n            <Route path=\"/\" element={<App />} />\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"terms\" element={<Terms />} />\n            <Route path=\"stats\" element={<Stats />} />\n            <Route path=\"develop\" element={<Develop />} />\n            <Route path=\"processing\" element={<Processing />} />\n            <Route\n                path=\"page/:id\"\n                element={<Page />}\n            />\n        </Routes>\n    </BrowserRouter>,\n    rootElement\n    );\n"],"sourceRoot":""}